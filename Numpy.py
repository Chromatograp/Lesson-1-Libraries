# -*- coding: utf-8 -*-
"""Копия блокнота "Копия 2.3.ipynb"

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yqwveV4NbwdirwsGC2_y5KBus6vhq4xw
"""

import numpy as np

print('Задание 1.1.')

# Импортируйте библиотеку Numpy и дайте ей псевдоним np. Создайте массив Numpy
# под названием a размером 5x2, то есть состоящий из 5 строк и 2 столбцов.
# Первый столбец должен содержать числа 1, 2, 3, 3, 1, а второй - числа 6, 8, 11,
# 10, 7. Будем считать, что каждый столбец - это признак, а строка - наблюдение.
# Затем найдите среднее значение по каждому признаку, используя метод mean
# массива Numpy. Результат запишите в массив mean_a, в нем должно быть 2 элемента.

a = np.array([[1, 6], [2, 8], [3, 11], [3, 10], [1, 7]])
print('Матрица а\n', a)
mean_a = a.mean(axis = 0)
print('Среднее значение по каждому признаку\n', mean_a)

print('Задание 1.2.')

# Вычислите массив a_centered, отняв от значений массива “а” средние значения
# соответствующих признаков, содержащиеся в массиве mean_a. Вычисление должно
# производиться в одно действие. Получившийся массив должен иметь размер 5x2.

a_centered = a - mean_a
print('Массив a за вычетом средних значений\n', a_centered)

print('Задание 1.3.')

# Найдите скалярное произведение столбцов массива a_centered. В результате
# должна получиться величина a_centered_sp. Затем поделите a_centered_sp на N-1,
# где N - число наблюдений.

a_centered_sp = np.multiply(a[0,:], a[1,:])
N = a.shape[0] - 1
print(np.divide(a_centered_sp, N))

print('Задание 1.4.')

# В этом задании проверьте получившееся число, вычислив ковариацию еще одним
# способом - с помощью функции np.cov. В качестве аргумента m функция np.cov
# должна принимать транспонированный массив “a”. В получившейся ковариационной
# матрице (массив Numpy размером 2x2) искомое значение ковариации будет равно
# элементу в строке с индексом 0 и столбце с индексом 1.

print(np.cov(a))